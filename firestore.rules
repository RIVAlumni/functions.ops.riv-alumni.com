rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    //! REMEMBER TO ADD DATA AGGREGATION RULES

    match /{document=**} {
      allow read, write: if false;
    }

    match /users/{userID} {
      // Non-Privileged User
      allow get: if request.auth.uid == userID;

      // Privileged User
      allow create: if false;
      allow get,
            list,
            update,
            delete: if getRole('Administrator');
    }

    match /aggregations/users {
      // Privileged User
      allow get: if getRole('Editor');
      allow get, delete: if getRole('Administrator');
    }

  	match /members/{memberID} {
      // Non-Privileged User
      allow get: if getUserData()['Membership ID'] == memberID;
      allow update: if getUserData()['Membership ID'] == memberID;

      // Privileged User
      allow get,
            list,
            create,
            update: if getRole('Editor')
                    || getRole('Administrator');

      allow delete: if getRole('Administrator');

      match /remarks/{remarkID} {
        // Privileged User
        allow get,
              list,
              create,
              update: if getRole('Editor')
                      || getRole('Administrator');

        allow delete: if getRole('Administrator');
      }
    }

    match /aggregations/members {
      // Privileged User
      allow get: if getRole('Editor');
      allow get, delete: if getRole('Administrator');
    }

    match /events/{eventID} {
      // Non-Privileged User
      allow get, list: if getRole('Alumni');

      // Privileged User
      allow get,
            list,
            create,
            update: if getRole('Editor')
                    || getRole('Administrator');

      allow delete: if getRole('Administrator');
    }

    match /aggregations/events {
      // Non-Privileged User
      allow get: if getRole('Alumni');

      // Privileged User
      allow get: if getRole('Editor');
      allow get, delete: if getRole('Administrator');
    }

    match /participations/{participationID} {
      allow read, write: if false;

      // Non-Privileged User
      allow get: if existingData()['Membership ID'] == getUserData()['Membership ID']

      // Privileged User
      allow get,
            list,
            create,
            update: if getRole('Editor')
                    || getRole('Administrator');

      allow delete: if getRole('Administrator');
    }

    match /aggregations/participations {
      // Non-Privileged User
      allow get: if getRole('Alumni');

      // Privileged User
      allow get: if getRole('Editor');
      allow get, delete: if getRole('Administrator');
    }

    function existingData() {
      return resource.data;
    }

    function incomingData() {
      return request.resource.data;
    }

    function getUserData() {
    	return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function getRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data['Roles'][role]
    }
  }
}
